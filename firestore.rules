rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to get user data
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Helper function to check if user is Super Admin
    function isSuperAdmin() {
      return isSignedIn() && getUserData().role == 'Super Admin';
    }
    
    // Helper function to check if user is approved
    function isApproved() {
      return isSignedIn() && 
             (getUserData().approvalStatus == 'approved' || 
              !('approvalStatus' in getUserData()));
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone can read their own user document
      allow read: if isSignedIn() && request.auth.uid == userId;
      
      // Super Admins can read all users
      allow read: if isSuperAdmin();
      
      // Users can create their own account (signup)
      allow create: if request.auth.uid == userId;
      
      // Users can update their own profile (basic fields only)
      allow update: if isSignedIn() && 
                       request.auth.uid == userId &&
                       !request.resource.data.diff(resource.data).affectedKeys()
                         .hasAny(['role', 'approvalStatus', 'assignedBatches']);
      
      // Super Admins can update any user (including role, approval status, batches)
      allow update: if isSuperAdmin();
      
      // Super Admins can delete users
      allow delete: if isSuperAdmin();
    }
    
    // Auth deletion requests collection
    match /auth_deletion_requests/{requestId} {
      // Super Admins can create deletion requests
      allow create: if isSuperAdmin();
      
      // Super Admins can read deletion requests
      allow read: if isSuperAdmin();
      
      // Allow Cloud Functions to update (they run without auth context)
      // Also allow Super Admins to update
      allow update: if request.auth == null || isSuperAdmin();
      
      // Only Super Admins can delete requests
      allow delete: if isSuperAdmin();
    }
    
    // Batches collection (example for future use)
    match /batches/{batchId} {
      // Approved users can read batches they're assigned to
      allow read: if isApproved() && 
                     (getUserData().assignedBatches.hasAny([batchId]) || 
                      getUserData().assignedBatches.hasAny(['All']));
      
      // Super Admins and Tutor Admins can read all batches
      allow read: if isSignedIn() && 
                     (getUserData().role == 'Super Admin' || 
                      getUserData().role == 'Tutor / Admin');
      
      // Super Admins and Tutor Admins can write batches
      allow write: if isSignedIn() && 
                      (getUserData().role == 'Super Admin' || 
                       getUserData().role == 'Tutor / Admin');
    }
    
    // Reports collection (example for future use)
    match /reports/{reportId} {
      // Users can read their own reports
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      
      // Mentors can read reports of their mentees
      allow read: if isSignedIn() && 
                     getUserData().role == 'Mentor' &&
                     resource.data.mentorId == request.auth.uid;
      
      // Super Admins can read all reports
      allow read: if isSuperAdmin();
      
      // Users can create reports
      allow create: if isSignedIn() && isApproved();
      
      // Users can update their own reports
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
      
      // Super Admins can update/delete any report
      allow update, delete: if isSuperAdmin();
    }
    
    // Default deny for all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
